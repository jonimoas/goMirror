// Code generated by rice embed-go; DO NOT EDIT.
package main

import (
	"time"

	"github.com/GeertJohan/go.rice/embedded"
)

func init() {

	// define files
	file2 := &embedded.EmbeddedFile{
		Filename:    "index.tmpl",
		FileModTime: time.Unix(1693234054, 0),

		Content: string("\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\" href=\"style\">\r\n    <meta charset=\"utf-8\" />\r\n    <title>goMirror</title>\r\n  </head>\r\n  <body bgcolor=\"#000000\">\r\n    <div>\r\n    <button id=\"start\">Start</button>\r\n    <button id=\"end\">Stop</button>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"capturekey\"\r\n      name=\"capturekey\"\r\n      value=\"capturekey\"\r\n    />\r\n    <label for=\"capturekey\">Capture Keyboard</label>\r\n    <input type=\"checkbox\" id=\"queuekey\" name=\"queuekey\" value=\"queuekey\" />\r\n    <label for=\"queuekey\">Queue Keyboard</label>\r\n    <button id=\"send\">Send Queue</button>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"mobilemode\"\r\n      name=\"mobilemode\"\r\n      value=\"mobilemode\"\r\n    />\r\n    <label for=\"mobilemode\">Mobile Mode</label>\r\n    <br />\r\n    </div>\r\n    <div id=\"screencontainer\" style=\"top:40;left 0;\">\r\n      <img src=\"\" id=\"screen\" />\r\n    </div>\r\n  </body>\r\n  <script src=\"script\"></script>\r\n</html>\r\n\r\n"),
	}
	file3 := &embedded.EmbeddedFile{
		Filename:    "script.js",
		FileModTime: time.Unix(1693571514, 0),

		Content: string("var screenSocket;\r\nvar screenSocket;\r\ndocument.getElementById(\"start\").onclick = function (evt) {\r\n  var password = prompt(\"Enter Password\");\r\n  try{\r\n    screenSocket = new WebSocket(\"{{.screen}}\" + \"?password=\" + password);\r\n    screenSocket.onmessage = function (evt) {\r\n      document.getElementById(\"screen\").src = evt.data;\r\n      return false;\r\n    };\r\n    screenSocket.onopen = function (evt) {\r\n      screenSocket.send(\"go\");\r\n      return false;\r\n    };\r\n    screenSocket.onerror = function (evt) {\r\n      location.reload();\r\n    };\r\n    return false;\r\n  } catch(e) {\r\n    location.reload();\r\n  }\r\n};\r\ndocument.getElementById(\"end\").onclick = function (evt) {\r\n  screenSocket.send(\"stop\");\r\n  screenSocket.close();\r\n  return false;\r\n};\r\ndocument.getElementById(\"send\").onclick = function (evt) {\r\n  screenSocket.send(\"K-W\");\r\n  document.getElementById(\"queuekey\").checked = false;\r\n  return false;\r\n};\r\ndocument.getElementById(\"screen\").onclick = function (evt) {\r\n  if (document.getElementById(\"mobilemode\").checked) {\r\n    var move = false;\r\n    bounds = this.getBoundingClientRect();\r\n    var left = bounds.left;\r\n    var top = bounds.top;\r\n    var x = event.pageX - left;\r\n    var y = event.pageY - top;\r\n    var cw = this.clientWidth;\r\n    var ch = this.clientHeight;\r\n    var iw = this.naturalWidth;\r\n    var ih = this.naturalHeight;\r\n    var px = (x / cw) * iw;\r\n    var py = (y / ch) * ih;\r\n    if (px <= iw * 0.3) {\r\n      move = true;\r\n      screenSocket.send(\"M-M-L\");\r\n      if (px <= iw * 0.15) {\r\n        screenSocket.send(\"M-M-L\");\r\n      }\r\n    }\r\n    if (py <= ih * 0.3) {\r\n      move = true;\r\n      screenSocket.send(\"M-M-U\");\r\n      if (py <= ih * 0.15) {\r\n        screenSocket.send(\"M-M-U\");\r\n      }\r\n    }\r\n    if (px >= iw - 0.3 * iw) {\r\n      move = true;\r\n      screenSocket.send(\"M-M-R\");\r\n      if (px >= iw - 0.15 * iw) {\r\n        screenSocket.send(\"M-M-R\");\r\n      }\r\n    }\r\n    if (py >= ih - 0.3 * ih) {\r\n      move = true;\r\n      screenSocket.send(\"M-M-D\");\r\n      if (py >= ih - 0.15 * ih) {\r\n        screenSocket.send(\"M-M-D\");\r\n      }\r\n    }\r\n    if (!move) {\r\n      screenSocket.send(\"M-C-L\");\r\n    }\r\n  } else {\r\n    x = evt.offsetX;\r\n    y = evt.offsetY;\r\n    screenSocket.send(\"M-A-\" + x + \"-\" + y);\r\n    screenSocket.send(\"M-C-L\");\r\n  }\r\n};\r\ndocument.getElementById(\"screen\").oncontextmenu = function (evt) {\r\n  screenSocket.send(\"M-C-R\");\r\n};\r\ndocument.getElementById(\"queuekey\").onchange = function (evt) {\r\n  screenSocket.send(\"K-E\");\r\n};\r\ndocument.getElementById(\"mobilemode\").onchange = function (evt) {\r\n  if (document.getElementById(\"mobilemode\").checked) {\r\n    document.getElementById(\"screencontainer\").style.position = \"fixed\";\r\n    document.getElementById(\"screencontainer\").style.height = \"100%\";\r\n    document.getElementById(\"screencontainer\").style.width = \"100%\";\r\n    document.getElementById(\"screen\").style.height = \"100%\";\r\n    document.getElementById(\"screen\").style.width = \"100%\";\r\n    document.getElementById(\"screen\").style[\"object-fit\"] = \"scale-down\";\r\n    screenSocket.send(\"O-E\");\r\n  } else {\r\n    document.getElementById(\"screencontainer\").style.position = \"\";\r\n    document.getElementById(\"screencontainer\").style.height = \"\";\r\n    document.getElementById(\"screencontainer\").style.width = \"\";\r\n    document.getElementById(\"screen\").style.height = \"\";\r\n    document.getElementById(\"screen\").style.width = \"\";\r\n    document.getElementById(\"screen\").style[\"object-fit\"] = \"\";\r\n    screenSocket.send(\"O-D\");\r\n  }\r\n\r\n};\r\nwindow.addEventListener(\r\n  \"keydown\",\r\n  function (event) {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n    if (document.getElementById(\"capturekey\").checked) {\r\n      if (document.getElementById(\"queuekey\").checked) {\r\n        screenSocket.send(\"K-Q-\" + event.key);\r\n        event.preventDefault();\r\n        return false;\r\n      } else {\r\n        screenSocket.send(\"K-T-\" + event.key);\r\n        event.preventDefault();\r\n        return false;\r\n      }\r\n    }\r\n  },\r\n  true\r\n);\r\nwindow.addEventListener(\"beforeunload\", function(e){\r\n  screenSocket.send(\"stop\");\r\n  screenSocket.close();\r\n});\r\n"),
	}
	file4 := &embedded.EmbeddedFile{
		Filename:    "style.css",
		FileModTime: time.Unix(1607284322, 0),

		Content: string("label {\r\n    color: white;\r\n}\r\n\r\n#screen {\r\n    touch-action: manipulation;\r\n    transition-timing-function: linear;\r\n}"),
	}

	// define dirs
	dir1 := &embedded.EmbeddedDir{
		Filename:   "",
		DirModTime: time.Unix(1693234054, 0),
		ChildFiles: []*embedded.EmbeddedFile{
			file2, // "index.tmpl"
			file3, // "script.js"
			file4, // "style.css"

		},
	}

	// link ChildDirs
	dir1.ChildDirs = []*embedded.EmbeddedDir{}

	// register embeddedBox
	embedded.RegisterEmbeddedBox(`frontend`, &embedded.EmbeddedBox{
		Name: `frontend`,
		Time: time.Unix(1693234054, 0),
		Dirs: map[string]*embedded.EmbeddedDir{
			"": dir1,
		},
		Files: map[string]*embedded.EmbeddedFile{
			"index.tmpl": file2,
			"script.js":  file3,
			"style.css":  file4,
		},
	})
}
